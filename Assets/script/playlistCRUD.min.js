let currentEditingPlaylist="",tempPlaylistSongs=[];function loadPlaylist(e){if("default"===e){var t=[`${URL}OP1 - Redo.mp4`,`${URL}ED1 - STYX HELIX.mp4`,`${URL}OP2 - Paradisus - Paradoxum.mp4`,`${URL}ED2 - Stay Alive.webm`,`${URL}OP3 - Realize.mp4`,`${URL}ED3 - Memento.mp4`,`${URL}OP4 - Long shot.mp4`,`${URL}ED4 - Believe in you.webm`,`${URL}OP5 - Reweave.mp4`,`${URL}ED5 - NOX LUX.mp4`,],l=[`${URL}STRAIGHT BET.mp4`,`${URL}Bouya no Yume yo.mp4`,`${URL}Memories.mp4`,`${URL}White White Snow.mp4`,`${URL}Requiem of Silence.mp4`,`${URL}Wishing.mp4`,`${URL}Yuki no hate ni Kimi no na wo.mp4`,`${URL}Door.mp4`,`${URL}What you don't know.mp4`,`${URL}I Trust You.mp4`,];videoUrls=t,newvideoUrls=l,playVideo(videoUrls[0]),showToast("Reset playlists to default.");return}let a=(JSON.parse(localStorage.getItem("playlists"))||{})[e];a&&a.songs&&(playVideo((videoUrls=a.songs.map(e=>convertToUrl(e)))[0]),showToast(`Loaded playlist: "${e}" with ${a.songs.length} songs.`))}function convertToUrl(e){let t=MASTER_SONGS.find(t=>t.title===e);return t?`${URL}${t.filename}`:"ED2 - Stay Alive"===e||"ED4 - Believe in you"===e||"S1 Ending"===e?`${URL}${e}.webm`:`${URL}${e}.mp4`}function populateSidebarPlaylists(){let e=JSON.parse(localStorage.getItem("playlists"))||{},t=document.getElementById("dynamic-playlists");t.innerHTML="",Object.keys(e).forEach(l=>{let a=e[l];if(!a.songs||0===a.songs.length)return;let s=document.createElement("li");s.innerHTML=`
            <div class="flex space-y-1 items-center p-2 pl-11 w-full text-base font-normal text-gray-900 rounded-lg transition duration-75 group hover:bg-blue-100">
                <div onclick="loadPlaylist('${l}')" class="flex-1 text-left">
                    ${l} (${e[l].songs.length} songs)
                </div>
                <div class="flex gap-1">
                    <button onclick="editPlaylist('${l}')" class="text-blue-500 hover:text-blue-700" title="Edit">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                        </svg>
                    </button>
                    <button onclick="deletePlaylist('${l}')" class="text-red-500 hover:text-red-700" title="Delete">
                        <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9zM4 5a2 2 0 012-2h8a2 2 0 012 2v6a2 2 0 01-2 2H6a2 2 0 01-2-2V5zm3 4a1 1 0 102 0v3a1 1 0 11-2 0V9zm4 0a1 1 0 10-2 0v3a1 1 0 102 0V9z" clip-rule="evenodd"></path>
                        </svg>
                    </button>
                </div>
            </div>
        `,t.appendChild(s)})}function createNewPlaylist(){let e=prompt("Playlist name:");if(e&&e.trim()){let t=JSON.parse(localStorage.getItem("playlists"))||{};t[e.trim()]={songs:[],created:new Date().toISOString(),description:""},localStorage.setItem("playlists",JSON.stringify(t)),populateSidebarPlaylists(),showToast(`Created playlist: "${e}" successfully!`,"success"),editPlaylist(e.trim())}}function deletePlaylist(e){if(confirm(`X\xf3a danh s\xe1ch "${e}"?`)){let t=JSON.parse(localStorage.getItem("playlists"))||{};delete t[e],showToast(`Deleted playlist: "${e}" successfully!`,"success"),localStorage.setItem("playlists",JSON.stringify(t)),populateSidebarPlaylists()}}function editPlaylist(e){let t=JSON.parse(localStorage.getItem("playlists"))||{},l=t[e];if(currentEditingPlaylist=e,tempPlaylistSongs=[...l.songs],window.isEditingPlaylist=!0,!l)return;let a=createPlaylistEditorModal(e,l);document.body.appendChild(a),setTimeout(()=>a.style.opacity="1",10)}function createPlaylistEditorModal(e,t){let l=document.createElement("div");return l.className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 transition-opacity duration-300",l.style.opacity="0",l.id="playlist-editor-modal",l.innerHTML=`
        <div class="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-6xl w-full mx-4 h-[90vh] overflow-hidden shadow-2xl flex flex-col">
            <div class="flex justify-between items-center mb-6 flex-shrink-0">
                <div class="flex-1 mr-4">
                    <h2 class="text-xl font-bold text-gray-900 dark:text-white mb-3">Editing playlist</h2>
                    <div class="flex items-center gap-2">
                        <!-- Default view - just display name -->
                        <div id="playlist-name-display" class="flex items-center gap-2">
                            <span class="text-base font-medium text-gray-800 dark:text-gray-200">${e}</span>
                            <button onclick="startEditingName()" class="text-gray-500 hover:text-blue-500 transition-colors" title="Rename">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                                </svg>
                            </button>
                        </div>
                        
                        <!-- Edit view - input field (hidden by default) -->
                        <div id="playlist-name-edit" class="flex items-center gap-2" style="display: none;">
                            <input type="text" 
                                id="playlist-name-input" 
                                value="${e}" 
                                class="text-base font-medium bg-gray-50 dark:bg-gray-700 border border-gray-300 dark:border-gray-600 rounded px-2 py-1 focus:border-blue-500 focus:outline-none text-gray-800 dark:text-gray-200 min-w-0 max-w-xs"
                                placeholder="T\xean danh s\xe1ch ph\xe1t">
                            <button onclick="saveNameEdit()" class="text-green-500 hover:text-green-700" title="Lưu">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd"></path>
                                </svg>
                            </button>
                            <button onclick="cancelNameEdit()" class="text-red-500 hover:text-red-700" title="Hủy">
                                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                </svg>
                            </button>
                        </div>
                        
                        <span class="text-xs text-gray-500 dark:text-gray-400 bg-gray-100 dark:bg-gray-700 px-2 py-1 rounded-full" id="song-count-display">
                            ${t.songs.length} songs
                        </span>
                    </div>
                </div>
                <button onclick="closePlaylistEditor()" class="text-gray-500 hover:text-gray-700 dark:hover:text-gray-300 transition-colors">
                    <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                    </svg>
                </button>
            </div>
            
            <div class="grid grid-cols-1 lg:grid-cols-2 gap-8 flex-1 min-h-0">
                <!-- Available Songs -->
                <div class="flex flex-col min-h-0">
                    <div class="flex items-center justify-between mb-4 flex-shrink-0">
                        <input type="text" id="song-search" placeholder="Search songs..." 
                            class="px-3 py-1 border rounded text-sm w-48 dark:bg-gray-700 dark:border-gray-600" 
                            oninput="filterAvailableSongs()">
                    </div>
                    <div id="available-songs" class="border rounded-lg p-4 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 overflow-y-auto playlist-container-height">
                        ${generateAvailableSongsList(tempPlaylistSongs)}
                    </div>
                </div>
                
                <!-- Current Playlist -->
                <div class="flex flex-col min-h-0">
                    <div class="flex items-center justify-between mb-6 flex-shrink-0">
                        <button onclick="clearPlaylist('${e}')" class="text-red-500 hover:text-red-700 text-sm">
                            X\xf3a tất cả
                        </button>
                    </div>
                    <div id="current-playlist" class="border rounded-lg p-4 bg-gray-50 dark:bg-gray-700 dark:border-gray-600 overflow-y-auto playlist-container-height">
                        ${generateCurrentPlaylistList(tempPlaylistSongs)}
                    </div>
                </div>
            </div>
            
            <div class="flex justify-between items-center mt-6 flex-shrink-0">
                <div class="text-sm text-gray-600 dark:text-gray-400">
                    Drag and drop to rearrange order • Double click to add/remove a song
                </div>
                <div class="flex gap-3">
                    <button onclick="closePlaylistEditor()" class="px-6 py-2 bg-gray-300 dark:bg-gray-600 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-500 transition-colors">
                        Cancel
                    </button>
                    <button onclick="savePlaylist()" class="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
                        Save changes
                    </button>
                </div>
            </div>
        </div>
    `,l.addEventListener("click",e=>{e.target===l&&closePlaylistEditor()}),l}function clearPlaylist(e){confirm(`Delete all songs from "${e}"?`)&&(tempPlaylistSongs=[],refreshModalContent())}function saveNameEdit(){let e=document.getElementById("playlist-name-input"),t=e.value.trim();if(!t){showToast("Playlist name must not be blank","error");return}let l=document.querySelector("#playlist-name-display span");l.textContent=t,l.style.color="#10b981",setTimeout(()=>{l.style.color=""},1e3),cancelNameEdit(),showToast('Playlist name has been changed. Press "Save Changes" to save your changes!',"info")}function getCurrentPlaylistName(){let e=document.getElementById("playlist-name-edit");if(e&&"none"!==e.style.display){let t=document.getElementById("playlist-name-input");return t?t.value.trim():currentEditingPlaylist}let l=document.querySelector("#playlist-name-display span");return l?l.textContent.trim():currentEditingPlaylist}function startEditingName(){let e=document.getElementById("playlist-name-display"),t=document.getElementById("playlist-name-edit"),l=document.getElementById("playlist-name-input");e.style.display="none",t.style.display="flex",setTimeout(()=>{l.focus(),l.select(),l.addEventListener("keydown",handleNameEditKeydown)},100)}function handleNameEditKeydown(e){"Enter"===e.key?(e.preventDefault(),saveNameEdit()):"Escape"===e.key&&(e.preventDefault(),cancelNameEdit())}function cancelNameEdit(){let e=document.getElementById("playlist-name-display"),t=document.getElementById("playlist-name-edit"),l=document.getElementById("playlist-name-input");l.removeEventListener("keydown",handleNameEditKeydown),l.value=currentEditingPlaylist,t.style.display="none",e.style.display="flex"}document.addEventListener("DOMContentLoaded",async()=>{populateSidebarPlaylists()});let draggedIndex=null;function dragStart(e,t){draggedIndex=t,e.dataTransfer.effectAllowed="move",e.target.style.opacity="0.5"}function dragOver(e){e.preventDefault(),e.dataTransfer.dropEffect="move"}function dragDrop(e,t){if(e.preventDefault(),null!==draggedIndex&&draggedIndex!==t){let l=tempPlaylistSongs[draggedIndex];tempPlaylistSongs.splice(draggedIndex,1),tempPlaylistSongs.splice(t,0,l),refreshModalContent()}draggedIndex=null,e.target.style.opacity="1"}function dragEnd(e){e.target.style.opacity="1",draggedIndex=null}function filterAvailableSongs(){let e=document.getElementById("song-search").value.toLowerCase(),t=document.getElementById("available-songs"),l=t.querySelectorAll("[data-song-title]");l.forEach(t=>{let l=t.getAttribute("data-song-title").toLowerCase();l.includes(e)?t.style.display="flex":t.style.display="none"})}function generateAvailableSongsList(e){let t=MASTER_SONGS.filter(t=>!e.includes(t.title));return 0===t.length?`
            <div class="text-center text-gray-500 py-8">
                <div class="font-medium">All songs have been added!</div>
                <div class="text-sm mt-1">Playlist is full!</div>
            </div>
        `:t.map((e,t)=>`
        <div class="flex items-center justify-between p-2 rounded hover:bg-white dark:hover:bg-gray-600 transition-colors border border-transparent hover:border-gray-200 dark:hover:border-gray-500" 
            ondblclick="addSongFromDataAttr(this)" 
            data-song-title="${e.title}"
            data-song-index="${t}">
            <div class="flex items-center">
                <span class="text-sm font-medium">${e.title}</span>
                <span class="ml-2 px-2 py-1 text-xs rounded-full ${getTypeColor(e.type)}">
                    ${e.type.toUpperCase()}
                </span>
            </div>
            <button onclick="addSongFromDataAttr(this.parentElement)" 
                    class="text-green-500 hover:text-green-700" title="Add">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
                </svg>
            </button>
        </div>
    `).join("")}function addSongFromDataAttr(e){let t=e.getAttribute("data-song-title");addSongToCurrentPlaylist(t)}function removeSongFromDataAttr(e){let t=e.getAttribute("data-song-title");removeSongFromCurrentPlaylist(t)}function getTypeColor(e){switch(e){case"opening":return"bg-blue-100 text-blue-800";case"ending":return"bg-green-100 text-green-800";case"insert song":return"bg-purple-100 text-purple-800";case"special":return"bg-yellow-100 text-yellow-800";case"live concert":return"bg-red-100 text-red-800";default:return"bg-gray-100 text-gray-800"}}function generateCurrentPlaylistList(e){return 0===e.length?'<div class="text-center text-gray-500 dark:text-gray-400 py-8">Playlist is empty.<br><small>Add songs from the left column!</small></div>':e.map((e,t)=>`
        <div class="flex items-center justify-between p-3 rounded bg-white dark:bg-gray-600 border dark:border-gray-500 mb-2 cursor-move" 
             draggable="true" 
             ondragstart="dragStart(event, ${t})" 
             ondragover="dragOver(event)" 
             ondrop="dragDrop(event, ${t})"
             ondragend="dragEnd(event)"
             ondblclick="removeSongFromCurrentPlaylist('${e}')">
            <div class="flex items-center">
                <span class="text-gray-400 mr-3 font-mono text-sm">${(t+1).toString().padStart(2,"0")}</span>
                <span class="font-medium">${e}</span>
            </div>
            <button onclick="removeSongFromCurrentPlaylist('${e}')" class="text-red-500 hover:text-red-700">
                <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                </svg>
            </button>
        </div>
    `).join("")}function getAllAvailableSongs(){return MASTER_SONGS.map(e=>e.title)}function getAllAvailableSongsLegacy(){let e=[],t=[...videoUrls,...newvideoUrls];return t.forEach(t=>{let l=cleanVideoSrcName(t);e.includes(l)||e.push(l)}),e.sort()}function addSongToCurrentPlaylist(e){tempPlaylistSongs.includes(e)||(tempPlaylistSongs.push(e),refreshModalContent())}function removeSongFromCurrentPlaylist(e){tempPlaylistSongs=tempPlaylistSongs.filter(t=>t!==e),refreshModalContent()}function refreshModalContent(){let e=document.getElementById("available-songs"),t=document.getElementById("current-playlist"),l=document.getElementById("song-search");if(e&&t){let a=l?l.value:"";e.innerHTML=generateAvailableSongsList(tempPlaylistSongs),t.innerHTML=generateCurrentPlaylistList(tempPlaylistSongs),a&&l&&(l.value=a,filterAvailableSongs());let s=document.getElementById("song-count-display");s&&(s.textContent=`${tempPlaylistSongs.length} b\xe0i`);let n=document.querySelector('button[onclick*="savePlaylist"]');n&&(0===tempPlaylistSongs.length?(n.disabled=!0,n.className=n.className.replace("bg-blue-500","bg-gray-400"),n.className=n.className.replace("hover:bg-blue-600","cursor-not-allowed")):(n.disabled=!1,n.className=n.className.replace("bg-gray-400","bg-blue-500"),n.className=n.className.replace("cursor-not-allowed","hover:bg-blue-600")))}}function closePlaylistEditor(){let e=document.getElementById("playlist-editor-modal");e&&(e.style.opacity="0",setTimeout(()=>{e.remove(),window.isEditingPlaylist=!1},300))}function savePlaylist(){let e=getCurrentPlaylistName(),t=currentEditingPlaylist;if(!e){showToast("Playlist name must not be blank!","error");return}if(0===tempPlaylistSongs.length){let l=JSON.parse(localStorage.getItem("playlists"))||{};delete l[t],localStorage.setItem("playlists",JSON.stringify(l)),closePlaylistEditor(),populateSidebarPlaylists(),showToast(`Deleted empty playlist: "${t}"`,"warning");return}let a=JSON.parse(localStorage.getItem("playlists"))||{};if(e!==t){if(a[e]){showToast(`Playlist: "${e}" already existed!`,"error");return}a[e]={songs:[...tempPlaylistSongs],created:a[t].created,description:a[t].description||"",modified:new Date().toISOString()},delete a[t],showToast(`Changed Playlist name from "${t}" to "${e}" and successfully saved!`)}else a[e].songs=[...tempPlaylistSongs],a[e].modified=new Date().toISOString(),showToast(`Successfully saved playlist: "${e}"`);localStorage.setItem("playlists",JSON.stringify(a)),populateSidebarPlaylists(),closePlaylistEditor()}